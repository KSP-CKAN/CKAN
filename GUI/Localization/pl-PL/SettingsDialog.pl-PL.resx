<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>48</value>
  </metadata>
  <data name="RepositoryGroupBox.Text" xml:space="preserve">
    <value>Metadane repozytoriów</value>
  </data>
  <data name="NewRepoButton.Text" xml:space="preserve">
    <value>Dodaj</value>
  </data>
  <data name="UpRepoButton.Text" xml:space="preserve">
    <value>W górę</value>
  </data>
  <data name="DownRepoButton.Text" xml:space="preserve">
    <value>W dół</value>
  </data>
  <data name="DeleteRepoButton.Text" xml:space="preserve">
    <value>Skasuj</value>
  </data>
  <data name="AuthTokensGroupBox.Text" xml:space="preserve">
    <value>Tokeny uwierzytelniania</value>
  </data>
  <data name="NewAuthTokenButton.Text" xml:space="preserve">
    <value>Dodaj</value>
  </data>
  <data name="DeleteAuthTokenButton.Text" xml:space="preserve">
    <value>Skasuj</value>
  </data>
  <data name="CacheGroupBox.Text" xml:space="preserve">
    <value>Pliki cache</value>
  </data>
  <data name="CacheSummary.Text" xml:space="preserve">
    <value>N plików, M MiB</value>
  </data>
  <data name="CacheLimitPreLabel.Text" xml:space="preserve">
    <value>Limit rozmiaru cache:</value>
  </data>
  <data name="CacheLimitPostLabel.Text" xml:space="preserve">
    <value>MiB (zostaw puste, jeśli nie chcesz limitu)</value>
  </data>
  <data name="ChangeCacheButton.Text" xml:space="preserve">
    <value>Zmień...</value>
  </data>
  <data name="ClearCacheButton.Text" xml:space="preserve">
    <value>Wyczyść</value>
  </data>
  <data name="PurgeToLimitMenuItem.Text" xml:space="preserve">
    <value>Wyczyść do limitu</value>
  </data>
  <data name="PurgeAllMenuItem.Text" xml:space="preserve">
    <value>Wyczyść wszystko</value>
  </data>
  <data name="ResetCacheButton.Text" xml:space="preserve">
    <value>Resetuj</value>
  </data>
  <data name="OpenCacheButton.Text" xml:space="preserve">
    <value>Otwórz</value>
  </data>
  <data name="AutoUpdateGroupBox.Text" xml:space="preserve">
    <value>Automatyczne aktualizacje</value>
  </data>
  <data name="LocalVersionPreLabel.Text" xml:space="preserve">
    <value>Pobrana wersja:</value>
  </data>
  <data name="LocalVersionLabel.Text" xml:space="preserve">
    <value>v0.0.0</value>
  </data>
  <data name="LatestVersionPreLabel.Text" xml:space="preserve">
    <value>Najnowsza wersja:</value>
  </data>
  <data name="LatestVersionLabel.Text" xml:space="preserve">
    <value>???</value>
  </data>
  <data name="CheckUpdateOnLaunchCheckbox.Text" xml:space="preserve">
    <value>Sprawdź aktualizacje CKAN przy uruchomieniu</value>
  </data>
  <data name="CheckForUpdatesButton.Text" xml:space="preserve">
    <value>Sprawdź dostępność aktualizacji</value>
  </data>
  <data name="InstallUpdateButton.Text" xml:space="preserve">
    <value>Zainstaluj aktualizację</value>
  </data>
  <data name="BehaviourGroupBox.Text" xml:space="preserve">
    <value>Zachowanie</value>
  </data>
  <data name="EnableTrayIconCheckBox.Text" xml:space="preserve">
    <value>Włącz ikonę w zasobniku</value>
  </data>
  <data name="MinimizeToTrayCheckBox.Text" xml:space="preserve">
    <value>Minimalizuj do zasobnika</value>
  </data>
  <data name="RefreshPreLabel.Text" xml:space="preserve">
    <value>Odśwież listę modów co</value>
  </data>
  <data name="RefreshPostLabel.Text" xml:space="preserve">
    <value>minut(y)</value>
  </data>
  <data name="PauseRefreshCheckBox.Text" xml:space="preserve">
    <value>Wstrzymaj odświeżanie</value>
  </data>
  <data name="MoreSettingsGroupBox.Text" xml:space="preserve">
    <value>Więcej ustawień</value>
  </data>
  <data name="LanguageSelectionLabel.Text" xml:space="preserve">
    <value>Język (wymaga ponownego uruchomienia aplikacji):</value>
  </data>
  <data name="RefreshOnStartupCheckbox.Text" xml:space="preserve">
    <value>Aktualizuj repozytoria przy uruchomieniu</value>
  </data>
  <data name="HideEpochsCheckbox.Text" xml:space="preserve">
    <value>Ukryj numery epokowe na liście modyfikacji (wymaga ponownego uruchomienia)</value>
  </data>
  <data name="HideVCheckbox.Text" xml:space="preserve">
    <value>Ukryj "v" na liście modyfikacji (wymaga restartu)</value>
  </data>
  <data name="AutoSortUpdateCheckBox.Text" xml:space="preserve">
    <value>Automatycznie sortuj według kolumny aktualizacji po kliknięciu "Dodaj dostępne aktualizacje"</value>
  </data>
  <data name="RepoNameHeader.Text" xml:space="preserve">
    <value>Nazwa</value>
  </data>
  <data name="RepoURLHeader.Text" xml:space="preserve">
    <value>URL</value>
  </data>
  <data name="AuthHostHeader.Text" xml:space="preserve">
    <value>Host</value>
  </data>
  <data name="AuthTokenHeader.Text" xml:space="preserve">
    <value>Token</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Ustawienia</value>
  </data>
</root>
