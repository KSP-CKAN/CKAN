//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated. (I WISH!)
// </auto-generated>
//------------------------------------------------------------------------------

namespace CKAN.CmdLine.Properties {
    using System;


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() { }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null))
                {
                    resourceMan = new SingleAssemblyResourceManager("CKAN.CmdLine.Properties.Resources", typeof(Resources).Assembly);
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }

        internal static string Usage {
            get { return (string)(ResourceManager.GetObject("Usage", resourceCulture)); }
        }
        internal static string Command {
            get { return (string)(ResourceManager.GetObject("Command", resourceCulture)); }
        }
        internal static string UnknownCommand {
            get { return (string)(ResourceManager.GetObject("UnknownCommand", resourceCulture)); }
        }
        internal static string Options {
            get { return (string)(ResourceManager.GetObject("Options", resourceCulture)); }
        }
        internal static string ArgumentMissing {
            get { return (string)(ResourceManager.GetObject("ArgumentMissing", resourceCulture)); }
        }
        internal static string Path {
            get { return (string)(ResourceManager.GetObject("Path", resourceCulture)); }
        }

        internal static string MainVersion {
            get { return (string)(ResourceManager.GetObject("MainVersion", resourceCulture)); }
        }
        internal static string MainUnknownCommand {
            get { return (string)(ResourceManager.GetObject("MainUnknownCommand", resourceCulture)); }
        }
        internal static string MainMissingInstance {
            get { return (string)(ResourceManager.GetObject("MainMissingInstance", resourceCulture)); }
        }
        internal static string OptionsRootError {
            get { return (string)(ResourceManager.GetObject("OptionsRootError", resourceCulture)); }
        }
        internal static string OptionsRootWarning {
            get { return (string)(ResourceManager.GetObject("OptionsRootWarning", resourceCulture)); }
        }
        internal static string OptionsMonoWarning {
            get { return (string)(ResourceManager.GetObject("OptionsMonoWarning", resourceCulture)); }
        }
        internal static string OptionsInstanceAndGameDir {
            get { return (string)(ResourceManager.GetObject("OptionsInstanceAndGameDir", resourceCulture)); }
        }
        internal static string OptionsInvalidInstance {
            get { return (string)(ResourceManager.GetObject("OptionsInvalidInstance", resourceCulture)); }
        }
        internal static string InstanceNotInstance {
            get { return (string)(ResourceManager.GetObject("InstanceNotInstance", resourceCulture)); }
        }
        internal static string InstanceDuplicate {
            get { return (string)(ResourceManager.GetObject("InstanceDuplicate", resourceCulture)); }
        }

        internal static string UserYesNoPromptSuffix {
            get { return (string)(ResourceManager.GetObject("UserYesNoPromptSuffix", resourceCulture)); }
        }
        internal static string UserYesNoY {
            get { return (string)(ResourceManager.GetObject("UserYesNoY", resourceCulture)); }
        }
        internal static string UserYesNoYes {
            get { return (string)(ResourceManager.GetObject("UserYesNoYes", resourceCulture)); }
        }
        internal static string UserYesNoN {
            get { return (string)(ResourceManager.GetObject("UserYesNoN", resourceCulture)); }
        }
        internal static string UserYesNoNo {
            get { return (string)(ResourceManager.GetObject("UserYesNoNo", resourceCulture)); }
        }
        internal static string UserYesNoInvalid {
            get { return (string)(ResourceManager.GetObject("UserYesNoInvalid", resourceCulture)); }
        }
        internal static string UserSelectionPromptWithDefault {
            get { return (string)(ResourceManager.GetObject("UserSelectionPromptWithDefault", resourceCulture)); }
        }
        internal static string UserSelectionPromptWithoutDefault {
            get { return (string)(ResourceManager.GetObject("UserSelectionPromptWithoutDefault", resourceCulture)); }
        }
        internal static string UserSelectionC {
            get { return (string)(ResourceManager.GetObject("UserSelectionC", resourceCulture)); }
        }
        internal static string UserSelectionN {
            get { return (string)(ResourceManager.GetObject("UserSelectionN", resourceCulture)); }
        }
        internal static string UserSelectionCancelled {
            get { return (string)(ResourceManager.GetObject("UserSelectionCancelled", resourceCulture)); }
        }
        internal static string UserSelectionNotNumber {
            get { return (string)(ResourceManager.GetObject("UserSelectionNotNumber", resourceCulture)); }
        }
        internal static string UserSelectionTooLarge {
            get { return (string)(ResourceManager.GetObject("UserSelectionTooLarge", resourceCulture)); }
        }
        internal static string UserSelectionTooSmall {
            get { return (string)(ResourceManager.GetObject("UserSelectionTooSmall", resourceCulture)); }
        }

        internal static string AuthTokenHostHeader {
            get { return (string)(ResourceManager.GetObject("AuthTokenHostHeader", resourceCulture)); }
        }
        internal static string AuthTokenTokenHeader {
            get { return (string)(ResourceManager.GetObject("AuthTokenTokenHeader", resourceCulture)); }
        }
        internal static string AuthTokenHelpSummary {
            get { return (string)(ResourceManager.GetObject("AuthTokenHelpSummary", resourceCulture)); }
        }

        internal static string AvailableHeader {
            get { return (string)(ResourceManager.GetObject("AvailableHeader", resourceCulture)); }
        }

        internal static string CacheHelpSummary {
            get { return (string)(ResourceManager.GetObject("CacheHelpSummary", resourceCulture)); }
        }
        internal static string CacheSet {
            get { return (string)(ResourceManager.GetObject("CacheSet", resourceCulture)); }
        }
        internal static string CacheInvalidPath {
            get { return (string)(ResourceManager.GetObject("CacheInvalidPath", resourceCulture)); }
        }
        internal static string CacheCleared {
            get { return (string)(ResourceManager.GetObject("CacheCleared", resourceCulture)); }
        }
        internal static string CacheReset {
            get { return (string)(ResourceManager.GetObject("CacheReset", resourceCulture)); }
        }
        internal static string CacheResetFailed {
            get { return (string)(ResourceManager.GetObject("CacheResetFailed", resourceCulture)); }
        }
        internal static string CacheUnlimited {
            get { return (string)(ResourceManager.GetObject("CacheUnlimited", resourceCulture)); }
        }
        internal static string CacheInfo {
            get { return (string)(ResourceManager.GetObject("CacheInfo", resourceCulture)); }
        }

        internal static string CompareSame {
            get { return (string)(ResourceManager.GetObject("CompareSame", resourceCulture)); }
        }
        internal static string CompareLower {
            get { return (string)(ResourceManager.GetObject("CompareLower", resourceCulture)); }
        }
        internal static string CompareHigher {
            get { return (string)(ResourceManager.GetObject("CompareHigher", resourceCulture)); }
        }
        internal static string CompatHelpSummary {
            get { return (string)(ResourceManager.GetObject("CompatHelpSummary", resourceCulture)); }
        }
        internal static string CompatVersionHeader {
            get { return (string)(ResourceManager.GetObject("CompatVersionHeader", resourceCulture)); }
        }
        internal static string CompatActualHeader {
            get { return (string)(ResourceManager.GetObject("CompatActualHeader", resourceCulture)); }
        }
        internal static string CompatInvalid {
            get { return (string)(ResourceManager.GetObject("CompatInvalid", resourceCulture)); }
        }
        internal static string CompatCantForget {
            get { return (string)(ResourceManager.GetObject("CompatCantForget", resourceCulture)); }
        }

        internal static string InstanceHelpSummary {
            get { return (string)(ResourceManager.GetObject("InstanceHelpSummary", resourceCulture)); }
        }
        internal static string InstanceListNoVersion {
            get { return (string)(ResourceManager.GetObject("InstanceListNoVersion", resourceCulture)); }
        }
        internal static string InstanceListYes {
            get { return (string)(ResourceManager.GetObject("InstanceListYes", resourceCulture)); }
        }
        internal static string InstanceListNo {
            get { return (string)(ResourceManager.GetObject("InstanceListNo", resourceCulture)); }
        }
        internal static string InstanceListNameHeader {
            get { return (string)(ResourceManager.GetObject("InstanceListNameHeader", resourceCulture)); }
        }
        internal static string InstanceListVersionHeader {
            get { return (string)(ResourceManager.GetObject("InstanceListVersionHeader", resourceCulture)); }
        }
        internal static string InstanceListDefaultHeader {
            get { return (string)(ResourceManager.GetObject("InstanceListDefaultHeader", resourceCulture)); }
        }
        internal static string InstanceListPathHeader {
            get { return (string)(ResourceManager.GetObject("InstanceListPathHeader", resourceCulture)); }
        }
        internal static string InstanceAddDuplicate {
            get { return (string)(ResourceManager.GetObject("InstanceAddDuplicate", resourceCulture)); }
        }
        internal static string InstanceAdded {
            get { return (string)(ResourceManager.GetObject("InstanceAdded", resourceCulture)); }
        }
        internal static string InstanceCloneNotFound {
            get { return (string)(ResourceManager.GetObject("InstanceCloneNotFound", resourceCulture)); }
        }
        internal static string InstanceCloneFailed {
            get { return (string)(ResourceManager.GetObject("InstanceCloneFailed", resourceCulture)); }
        }
        internal static string InstanceNotFound {
            get { return (string)(ResourceManager.GetObject("InstanceNotFound", resourceCulture)); }
        }
        internal static string InstanceRenamed {
            get { return (string)(ResourceManager.GetObject("InstanceRenamed", resourceCulture)); }
        }
        internal static string InstanceForgot {
            get { return (string)(ResourceManager.GetObject("InstanceForgot", resourceCulture)); }
        }
        internal static string InstanceDefaultArgumentMissing {
            get { return (string)(ResourceManager.GetObject("InstanceDefaultArgumentMissing", resourceCulture)); }
        }
        internal static string InstanceDefaultSet {
            get { return (string)(ResourceManager.GetObject("InstanceDefaultSet", resourceCulture)); }
        }
        internal static string InstanceFakeFailed {
            get { return (string)(ResourceManager.GetObject("InstanceFakeFailed", resourceCulture)); }
        }
        internal static string InstanceFakeBadArguments {
            get { return (string)(ResourceManager.GetObject("InstanceFakeBadArguments", resourceCulture)); }
        }
        internal static string InstanceFakeMakingHistory {
            get { return (string)(ResourceManager.GetObject("InstanceFakeMakingHistory", resourceCulture)); }
        }
        internal static string InstanceFakeBreakingGround {
            get { return (string)(ResourceManager.GetObject("InstanceFakeBreakingGround", resourceCulture)); }
        }
        internal static string InstanceFakeVersion {
            get { return (string)(ResourceManager.GetObject("InstanceFakeVersion", resourceCulture)); }
        }
        internal static string InstanceFakeBadGameVersion {
            get { return (string)(ResourceManager.GetObject("InstanceFakeBadGameVersion", resourceCulture)); }
        }
        internal static string InstanceFakeCancelled {
            get { return (string)(ResourceManager.GetObject("InstanceFakeCancelled", resourceCulture)); }
        }
        internal static string InstanceFakeCreating {
            get { return (string)(ResourceManager.GetObject("InstanceFakeCreating", resourceCulture)); }
        }
        internal static string InstanceFakeDefault {
            get { return (string)(ResourceManager.GetObject("InstanceFakeDefault", resourceCulture)); }
        }
        internal static string InstanceFakeDone {
            get { return (string)(ResourceManager.GetObject("InstanceFakeDone", resourceCulture)); }
        }

        internal static string ImportError {
            get { return (string)(ResourceManager.GetObject("ImportError", resourceCulture)); }
        }
        internal static string ImportNotFound {
            get { return (string)(ResourceManager.GetObject("ImportNotFound", resourceCulture)); }
        }

        internal static string InstallNotFound {
            get { return (string)(ResourceManager.GetObject("InstallNotFound", resourceCulture)); }
        }
        internal static string InstallTryAgain {
            get { return (string)(ResourceManager.GetObject("InstallTryAgain", resourceCulture)); }
        }
        internal static string InstallUnversionedDependencyNotSatisfied {
            get { return (string)(ResourceManager.GetObject("InstallUnversionedDependencyNotSatisfied", resourceCulture)); }
        }
        internal static string InstallVersionedDependencyNotSatisfied {
            get { return (string)(ResourceManager.GetObject("InstallVersionedDependencyNotSatisfied", resourceCulture)); }
        }
        internal static string InstallBadMetadata {
            get { return (string)(ResourceManager.GetObject("InstallBadMetadata", resourceCulture)); }
        }
        internal static string InstallFileConflictOwned {
            get { return (string)(ResourceManager.GetObject("InstallFileConflictOwned", resourceCulture)); }
        }
        internal static string InstallFileConflictUnowned {
            get { return (string)(ResourceManager.GetObject("InstallFileConflictUnowned", resourceCulture)); }
        }
        internal static string InstallGamedataReturned {
            get { return (string)(ResourceManager.GetObject("InstallGamedataReturned", resourceCulture)); }
        }
        internal static string InstallCancelled {
            get { return (string)(ResourceManager.GetObject("InstallCancelled", resourceCulture)); }
        }
        internal static string InstallAborted {
            get { return (string)(ResourceManager.GetObject("InstallAborted", resourceCulture)); }
        }
        internal static string InstallTryAuthToken {
            get { return (string)(ResourceManager.GetObject("InstallTryAuthToken", resourceCulture)); }
        }
        internal static string InstallDownloadFailed {
            get { return (string)(ResourceManager.GetObject("InstallDownloadFailed", resourceCulture)); }
        }
        internal static string InstallDLC {
            get { return (string)(ResourceManager.GetObject("InstallDLC", resourceCulture)); }
        }
        internal static string InstallDLCStorePage {
            get { return (string)(ResourceManager.GetObject("InstallDLCStorePage", resourceCulture)); }
        }

        internal static string ListUnknownFormat {
            get { return (string)(ResourceManager.GetObject("ListUnknownFormat", resourceCulture)); }
        }
        internal static string ListGameFound {
            get { return (string)(ResourceManager.GetObject("ListGameFound", resourceCulture)); }
        }
        internal static string ListGameVersion {
            get { return (string)(ResourceManager.GetObject("ListGameVersion", resourceCulture)); }
        }
        internal static string ListGameModulesHeader {
            get { return (string)(ResourceManager.GetObject("ListGameModulesHeader", resourceCulture)); }
        }
        internal static string ListLegend {
            get { return (string)(ResourceManager.GetObject("ListLegend", resourceCulture)); }
        }

        internal static string MarkHelpSummary {
            get { return (string)(ResourceManager.GetObject("MarkHelpSummary", resourceCulture)); }
        }
        internal static string MarkUnknownCommand {
            get { return (string)(ResourceManager.GetObject("MarkUnknownCommand", resourceCulture)); }
        }
        internal static string MarkNotInstalled {
            get { return (string)(ResourceManager.GetObject("MarkNotInstalled", resourceCulture)); }
        }
        internal static string MarkAlready {
            get { return (string)(ResourceManager.GetObject("MarkAlready", resourceCulture)); }
        }
        internal static string Marking {
            get { return (string)(ResourceManager.GetObject("Marking", resourceCulture)); }
        }
        internal static string MarkDLC {
            get { return (string)(ResourceManager.GetObject("MarkDLC", resourceCulture)); }
        }
        internal static string MarkChanged {
            get { return (string)(ResourceManager.GetObject("MarkChanged", resourceCulture)); }
        }
        internal static string MarkAutoInstalled {
            get { return (string)(ResourceManager.GetObject("MarkAutoInstalled", resourceCulture)); }
        }
        internal static string MarkUserSelected {
            get { return (string)(ResourceManager.GetObject("MarkUserSelected", resourceCulture)); }
        }

        internal static string PromptWelcome {
            get { return (string)(ResourceManager.GetObject("PromptWelcome", resourceCulture)); }
        }
        internal static string PromptWithInstance {
            get { return (string)(ResourceManager.GetObject("PromptWithInstance", resourceCulture)); }
        }
        internal static string PromptWithoutInstance {
            get { return (string)(ResourceManager.GetObject("PromptWithoutInstance", resourceCulture)); }
        }

        internal static string RemoveNotInstalled {
            get { return (string)(ResourceManager.GetObject("RemoveNotInstalled", resourceCulture)); }
        }
        internal static string RemoveDLC {
            get { return (string)(ResourceManager.GetObject("RemoveDLC", resourceCulture)); }
        }
        internal static string RemoveDLCStorePage {
            get { return (string)(ResourceManager.GetObject("RemoveDLCStorePage", resourceCulture)); }
        }
        internal static string RemoveCancelled {
            get { return (string)(ResourceManager.GetObject("RemoveCancelled", resourceCulture)); }
        }
        internal static string RemoveNothing {
            get { return (string)(ResourceManager.GetObject("RemoveNothing", resourceCulture)); }
        }

        internal static string RepairHelpSummary {
            get { return (string)(ResourceManager.GetObject("RepairHelpSummary", resourceCulture)); }
        }
        internal static string RepairUnknownCommand {
            get { return (string)(ResourceManager.GetObject("RepairUnknownCommand", resourceCulture)); }
        }
        internal static string Repaired {
            get { return (string)(ResourceManager.GetObject("Repaired", resourceCulture)); }
        }
        internal static string ReplaceModuleNotFound {
            get { return (string)(ResourceManager.GetObject("ReplaceModuleNotFound", resourceCulture)); }
        }
        internal static string Replacing {
            get { return (string)(ResourceManager.GetObject("Replacing", resourceCulture)); }
        }
        internal static string ReplaceFound {
            get { return (string)(ResourceManager.GetObject("ReplaceFound", resourceCulture)); }
        }
        internal static string ReplaceContinuePrompt {
            get { return (string)(ResourceManager.GetObject("ReplaceContinuePrompt", resourceCulture)); }
        }
        internal static string ReplaceCancelled {
            get { return (string)(ResourceManager.GetObject("ReplaceCancelled", resourceCulture)); }
        }
        internal static string ReplaceDependencyNotSatisfied {
            get { return (string)(ResourceManager.GetObject("ReplaceDependencyNotSatisfied", resourceCulture)); }
        }
        internal static string ReplaceNotFound {
            get { return (string)(ResourceManager.GetObject("ReplaceNotFound", resourceCulture)); }
        }

        internal static string RepoHelpSummary {
            get { return (string)(ResourceManager.GetObject("RepoHelpSummary", resourceCulture)); }
        }
        internal static string RepoUnknownCommand {
            get { return (string)(ResourceManager.GetObject("RepoUnknownCommand", resourceCulture)); }
        }
        internal static string RepoAvailableHeader {
            get { return (string)(ResourceManager.GetObject("RepoAvailableHeader", resourceCulture)); }
        }
        internal static string RepoAvailableFailed {
            get { return (string)(ResourceManager.GetObject("RepoAvailableFailed", resourceCulture)); }
        }
        internal static string RepoListHeader {
            get { return (string)(ResourceManager.GetObject("RepoListHeader", resourceCulture)); }
        }
        internal static string RepoAddNotFound {
            get { return (string)(ResourceManager.GetObject("RepoAddNotFound", resourceCulture)); }
        }
        internal static string RepoAddDuplicate {
            get { return (string)(ResourceManager.GetObject("RepoAddDuplicate", resourceCulture)); }
        }
        internal static string RepoAdded {
            get { return (string)(ResourceManager.GetObject("RepoAdded", resourceCulture)); }
        }
        internal static string RepoForgetNotFound {
            get { return (string)(ResourceManager.GetObject("RepoForgetNotFound", resourceCulture)); }
        }
        internal static string RepoForgetRemoving {
            get { return (string)(ResourceManager.GetObject("RepoForgetRemoving", resourceCulture)); }
        }
        internal static string RepoForgetRemoved {
            get { return (string)(ResourceManager.GetObject("RepoForgetRemoved", resourceCulture)); }
        }
        internal static string RepoSet {
            get { return (string)(ResourceManager.GetObject("RepoSet", resourceCulture)); }
        }

        internal static string SearchNoTerm {
            get { return (string)(ResourceManager.GetObject("SearchNoTerm", resourceCulture)); }
        }
        internal static string SearchFoundByAuthorWithIncompat {
            get { return (string)(ResourceManager.GetObject("SearchFoundByAuthorWithIncompat", resourceCulture)); }
        }
        internal static string SearchFoundWithIncompat {
            get { return (string)(ResourceManager.GetObject("SearchFoundWithIncompat", resourceCulture)); }
        }
        internal static string SearchFoundByAuthor {
            get { return (string)(ResourceManager.GetObject("SearchFoundByAuthor", resourceCulture)); }
        }
        internal static string SearchFound {
            get { return (string)(ResourceManager.GetObject("SearchFound", resourceCulture)); }
        }
        internal static string SearchCompatibleModsHeader {
            get { return (string)(ResourceManager.GetObject("SearchCompatibleModsHeader", resourceCulture)); }
        }
        internal static string SearchCompatibleMod {
            get { return (string)(ResourceManager.GetObject("SearchCompatibleMod", resourceCulture)); }
        }
        internal static string SearchIncompatibleModsHeader {
            get { return (string)(ResourceManager.GetObject("SearchIncompatibleModsHeader", resourceCulture)); }
        }
        internal static string SearchIncompatibleMod {
            get { return (string)(ResourceManager.GetObject("SearchIncompatibleMod", resourceCulture)); }
        }
        internal static string ShowNotInstalledOrCompatible {
            get { return (string)(ResourceManager.GetObject("ShowNotInstalledOrCompatible", resourceCulture)); }
        }
        internal static string ShowLookingForClose {
            get { return (string)(ResourceManager.GetObject("ShowLookingForClose", resourceCulture)); }
        }
        internal static string ShowNoClose {
            get { return (string)(ResourceManager.GetObject("ShowNoClose", resourceCulture)); }
        }
        internal static string ShowFoundOne {
            get { return (string)(ResourceManager.GetObject("ShowFoundOne", resourceCulture)); }
        }
        internal static string ShowClosePrompt {
            get { return (string)(ResourceManager.GetObject("ShowClosePrompt", resourceCulture)); }
        }
        internal static string ShowFilesHeader {
            get { return (string)(ResourceManager.GetObject("ShowFilesHeader", resourceCulture)); }
        }
        internal static string ShowModuleInfoHeader {
            get { return (string)(ResourceManager.GetObject("ShowModuleInfoHeader", resourceCulture)); }
        }
        internal static string ShowVersion {
            get { return (string)(ResourceManager.GetObject("ShowVersion", resourceCulture)); }
        }
        internal static string ShowAuthor {
            get { return (string)(ResourceManager.GetObject("ShowAuthor", resourceCulture)); }
        }
        internal static string ShowAuthorUnknown {
            get { return (string)(ResourceManager.GetObject("ShowAuthorUnknown", resourceCulture)); }
        }
        internal static string ShowStatus {
            get { return (string)(ResourceManager.GetObject("ShowStatus", resourceCulture)); }
        }
        internal static string ShowLicence {
            get { return (string)(ResourceManager.GetObject("ShowLicence", resourceCulture)); }
        }
        internal static string ShowTags {
            get { return (string)(ResourceManager.GetObject("ShowTags", resourceCulture)); }
        }
        internal static string ShowLanguages {
            get { return (string)(ResourceManager.GetObject("ShowLanguages", resourceCulture)); }
        }
        internal static string ShowDependsHeader {
            get { return (string)(ResourceManager.GetObject("ShowDependsHeader", resourceCulture)); }
        }
        internal static string ShowRecommendsHeader {
            get { return (string)(ResourceManager.GetObject("ShowRecommendsHeader", resourceCulture)); }
        }
        internal static string ShowSuggestsHeader {
            get { return (string)(ResourceManager.GetObject("ShowSuggestsHeader", resourceCulture)); }
        }
        internal static string ShowProvidesHeader {
            get { return (string)(ResourceManager.GetObject("ShowProvidesHeader", resourceCulture)); }
        }
        internal static string ShowResourcesHeader {
            get { return (string)(ResourceManager.GetObject("ShowResourcesHeader", resourceCulture)); }
        }
        internal static string ShowHomePage {
            get { return (string)(ResourceManager.GetObject("ShowHomePage", resourceCulture)); }
        }
        internal static string ShowManual {
            get { return (string)(ResourceManager.GetObject("ShowManual", resourceCulture)); }
        }
        internal static string ShowSpaceDock {
            get { return (string)(ResourceManager.GetObject("ShowSpaceDock", resourceCulture)); }
        }
        internal static string ShowRepository {
            get { return (string)(ResourceManager.GetObject("ShowRepository", resourceCulture)); }
        }
        internal static string ShowBugTracker {
            get { return (string)(ResourceManager.GetObject("ShowBugTracker", resourceCulture)); }
        }
        internal static string ShowCurse {
            get { return (string)(ResourceManager.GetObject("ShowCurse", resourceCulture)); }
        }
        internal static string ShowStore {
            get { return (string)(ResourceManager.GetObject("ShowStore", resourceCulture)); }
        }
        internal static string ShowSteamStore {
            get { return (string)(ResourceManager.GetObject("ShowSteamStore", resourceCulture)); }
        }
        internal static string ShowVersionFile {
            get { return (string)(ResourceManager.GetObject("ShowVersionFile", resourceCulture)); }
        }
        internal static string ShowFileName {
            get { return (string)(ResourceManager.GetObject("ShowFileName", resourceCulture)); }
        }
        internal static string ShowVersionHeader {
            get { return (string)(ResourceManager.GetObject("ShowVersionHeader", resourceCulture)); }
        }
        internal static string ShowGameVersionsHeader {
            get { return (string)(ResourceManager.GetObject("ShowGameVersionsHeader", resourceCulture)); }
        }

        internal static string UpdateChangesSummary {
            get { return (string)(ResourceManager.GetObject("UpdateChangesSummary", resourceCulture)); }
        }
        internal static string UpdateAddedHeader {
            get { return (string)(ResourceManager.GetObject("UpdateAddedHeader", resourceCulture)); }
        }
        internal static string UpdateRemovedHeader {
            get { return (string)(ResourceManager.GetObject("UpdateRemovedHeader", resourceCulture)); }
        }
        internal static string UpdateUpdatedHeader {
            get { return (string)(ResourceManager.GetObject("UpdateUpdatedHeader", resourceCulture)); }
        }
        internal static string UpdateSummary {
            get { return (string)(ResourceManager.GetObject("UpdateSummary", resourceCulture)); }
        }

        internal static string UpgradeQueryingCKAN {
            get { return (string)(ResourceManager.GetObject("UpgradeQueryingCKAN", resourceCulture)); }
        }
        internal static string UpgradeNewCKANAvailable {
            get { return (string)(ResourceManager.GetObject("UpgradeNewCKANAvailable", resourceCulture)); }
        }
        internal static string UpgradeProceed {
            get { return (string)(ResourceManager.GetObject("UpgradeProceed", resourceCulture)); }
        }
        internal static string UpgradePleaseWait {
            get { return (string)(ResourceManager.GetObject("UpgradePleaseWait", resourceCulture)); }
        }
        internal static string UpgradeAlreadyHaveLatest {
            get { return (string)(ResourceManager.GetObject("UpgradeAlreadyHaveLatest", resourceCulture)); }
        }
        internal static string UpgradeAborted {
            get { return (string)(ResourceManager.GetObject("UpgradeAborted", resourceCulture)); }
        }
        internal static string UpgradeNotFound {
            get { return (string)(ResourceManager.GetObject("UpgradeNotFound", resourceCulture)); }
        }
        internal static string UpgradeDLC {
            get { return (string)(ResourceManager.GetObject("UpgradeDLC", resourceCulture)); }
        }
        internal static string UpgradeDLCStorePage {
            get { return (string)(ResourceManager.GetObject("UpgradeDLCStorePage", resourceCulture)); }
        }

        internal static string ScanNotSaved {
            get { return (string)(ResourceManager.GetObject("ScanNotSaved", resourceCulture)); }
        }
        internal static string ScanPreliminaryInconsistent {
            get { return (string)(ResourceManager.GetObject("ScanPreliminaryInconsistent", resourceCulture)); }
        }

        internal static string FilterListGlobalHeader {
            get { return (string)(ResourceManager.GetObject("FilterListGlobalHeader", resourceCulture)); }
        }
        internal static string FilterListInstanceHeader {
            get { return (string)(ResourceManager.GetObject("FilterListInstanceHeader", resourceCulture)); }
        }
        internal static string FilterAddGlobalDuplicateError {
            get { return (string)(ResourceManager.GetObject("FilterAddGlobalDuplicateError", resourceCulture)); }
        }
        internal static string FilterAddInstanceDuplicateError {
            get { return (string)(ResourceManager.GetObject("FilterAddInstanceDuplicateError", resourceCulture)); }
        }
        internal static string FilterRemoveGlobalNotFoundError {
            get { return (string)(ResourceManager.GetObject("FilterRemoveGlobalNotFoundError", resourceCulture)); }
        }
        internal static string FilterRemoveInstanceNotFoundError {
            get { return (string)(ResourceManager.GetObject("FilterRemoveInstanceNotFoundError", resourceCulture)); }
        }
        internal static string FilterHelpSummary {
            get { return (string)(ResourceManager.GetObject("FilterHelpSummary", resourceCulture)); }
        }

        internal static string CompletionNotAvailable {
            get { return (string)(ResourceManager.GetObject("CompletionNotAvailable", resourceCulture)); }
        }

    }
}
