//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated. (I WISH!)
// </auto-generated>
//------------------------------------------------------------------------------

namespace CKAN.ConsoleUI.Properties {
    using System;


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() { }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null))
                {
                    resourceMan = new SingleAssemblyResourceManager("CKAN.ConsoleUI.Properties.Resources", typeof(Resources).Assembly);
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }

        internal static string Accept {
            get { return (string)(ResourceManager.GetObject("Accept", resourceCulture)); }
        }
        internal static string Cancel {
            get { return (string)(ResourceManager.GetObject("Cancel", resourceCulture)); }
        }
        internal static string DefaultGhostText {
            get { return (string)(ResourceManager.GetObject("DefaultGhostText", resourceCulture)); }
        }
        internal static string Ascending {
            get { return (string)(ResourceManager.GetObject("Ascending", resourceCulture)); }
        }
        internal static string AscendingSortTip {
            get { return (string)(ResourceManager.GetObject("AscendingSortTip", resourceCulture)); }
        }
        internal static string Descending {
            get { return (string)(ResourceManager.GetObject("Descending", resourceCulture)); }
        }
        internal static string DescendingSortTip {
            get { return (string)(ResourceManager.GetObject("DescendingSortTip", resourceCulture)); }
        }
        internal static string ColumnNumber {
            get { return (string)(ResourceManager.GetObject("ColumnNumber", resourceCulture)); }
        }
        internal static string ColumnNumberSortTip {
            get { return (string)(ResourceManager.GetObject("ColumnNumberSortTip", resourceCulture)); }
        }
        internal static string ColumnNameSortTip {
            get { return (string)(ResourceManager.GetObject("ColumnNameSortTip", resourceCulture)); }
        }
        internal static string CursorKeys {
            get { return (string)(ResourceManager.GetObject("CursorKeys", resourceCulture)); }
        }
        internal static string Scroll {
            get { return (string)(ResourceManager.GetObject("Scroll", resourceCulture)); }
        }
        internal static string ScrollMessages {
            get { return (string)(ResourceManager.GetObject("ScrollMessages", resourceCulture)); }
        }
        internal static string Menu {
            get { return (string)(ResourceManager.GetObject("Menu", resourceCulture)); }
        }
        internal static string Yes {
            get { return (string)(ResourceManager.GetObject("Yes", resourceCulture)); }
        }
        internal static string No {
            get { return (string)(ResourceManager.GetObject("No", resourceCulture)); }
        }
        internal static string OK {
            get { return (string)(ResourceManager.GetObject("OK", resourceCulture)); }
        }
        internal static string Force {
            get { return (string)(ResourceManager.GetObject("Force", resourceCulture)); }
        }
        internal static string Tab {
            get { return (string)(ResourceManager.GetObject("Tab", resourceCulture)); }
        }
        internal static string Enter {
            get { return (string)(ResourceManager.GetObject("Enter", resourceCulture)); }
        }
        internal static string F2 {
            get { return (string)(ResourceManager.GetObject("F2", resourceCulture)); }
        }
        internal static string Esc {
            get { return (string)(ResourceManager.GetObject("Esc", resourceCulture)); }
        }
        internal static string Ctrl {
            get { return (string)(ResourceManager.GetObject("Ctrl", resourceCulture)); }
        }
        internal static string Alt {
            get { return (string)(ResourceManager.GetObject("Alt", resourceCulture)); }
        }
        internal static string Back {
            get { return (string)(ResourceManager.GetObject("Back", resourceCulture)); }
        }
        internal static string Quit {
            get { return (string)(ResourceManager.GetObject("Quit", resourceCulture)); }
        }
        internal static string Add {
            get { return (string)(ResourceManager.GetObject("Add", resourceCulture)); }
        }
        internal static string Remove {
            get { return (string)(ResourceManager.GetObject("Remove", resourceCulture)); }
        }
        internal static string Edit {
            get { return (string)(ResourceManager.GetObject("Edit", resourceCulture)); }
        }
        internal static string Sort {
            get { return (string)(ResourceManager.GetObject("Sort", resourceCulture)); }
        }
        internal static string Toggle {
            get { return (string)(ResourceManager.GetObject("Toggle", resourceCulture)); }
        }
        internal static string Select {
            get { return (string)(ResourceManager.GetObject("Select", resourceCulture)); }
        }
        internal static string SelectAll {
            get { return (string)(ResourceManager.GetObject("SelectAll", resourceCulture)); }
        }
        internal static string DeselectAll {
            get { return (string)(ResourceManager.GetObject("DeselectAll", resourceCulture)); }
        }
        internal static string LaunchKSP {
            get { return (string)(ResourceManager.GetObject("LaunchKSP", resourceCulture)); }
        }
        internal static string Details {
            get { return (string)(ResourceManager.GetObject("Details", resourceCulture)); }
        }
        internal static string Up {
            get { return (string)(ResourceManager.GetObject("Up", resourceCulture)); }
        }
        internal static string Down {
            get { return (string)(ResourceManager.GetObject("Down", resourceCulture)); }
        }
        internal static string FileSelectDirectory {
            get { return (string)(ResourceManager.GetObject("FileSelectDirectory", resourceCulture)); }
        }
        internal static string FileSelectCountFooter {
            get { return (string)(ResourceManager.GetObject("FileSelectCountFooter", resourceCulture)); }
        }
        internal static string FileSelectNameHeader {
            get { return (string)(ResourceManager.GetObject("FileSelectNameHeader", resourceCulture)); }
        }
        internal static string FileSelectSizeHeader {
            get { return (string)(ResourceManager.GetObject("FileSelectSizeHeader", resourceCulture)); }
        }
        internal static string FileSelectTimestampHeader {
            get { return (string)(ResourceManager.GetObject("FileSelectTimestampHeader", resourceCulture)); }
        }
        internal static string FileSelectChangeDirectory {
            get { return (string)(ResourceManager.GetObject("FileSelectChangeDirectory", resourceCulture)); }
        }
        internal static string FileSelectSelect {
            get { return (string)(ResourceManager.GetObject("FileSelectSelect", resourceCulture)); }
        }
        internal static string FileSelectImport {
            get { return (string)(ResourceManager.GetObject("FileSelectImport", resourceCulture)); }
        }
        internal static string FileSelectDirSize {
            get { return (string)(ResourceManager.GetObject("FileSelectDirSize", resourceCulture)); }
        }
        internal static string AuthTokenListTitle {
            get { return (string)(ResourceManager.GetObject("AuthTokenListTitle", resourceCulture)); }
        }
        internal static string AuthTokenListGitHubLink {
            get { return (string)(ResourceManager.GetObject("AuthTokenListGitHubLink", resourceCulture)); }
        }
        internal static string AuthTokenListGitHubLinkTip {
            get { return (string)(ResourceManager.GetObject("AuthTokenListGitHubLinkTip", resourceCulture)); }
        }
        internal static string AuthTokenListLabel {
            get { return (string)(ResourceManager.GetObject("AuthTokenListLabel", resourceCulture)); }
        }
        internal static string AuthTokenListHostHeader {
            get { return (string)(ResourceManager.GetObject("AuthTokenListHostHeader", resourceCulture)); }
        }
        internal static string AuthTokenListTokenHeader {
            get { return (string)(ResourceManager.GetObject("AuthTokenListTokenHeader", resourceCulture)); }
        }
        internal static string AuthTokenListWarning {
            get { return (string)(ResourceManager.GetObject("AuthTokenListWarning", resourceCulture)); }
        }
        internal static string AuthTokenListMissingToken {
            get { return (string)(ResourceManager.GetObject("AuthTokenListMissingToken", resourceCulture)); }
        }
        internal static string AuthTokenAddTitle {
            get { return (string)(ResourceManager.GetObject("AuthTokenAddTitle", resourceCulture)); }
        }
        internal static string AuthTokenAddHost {
            get { return (string)(ResourceManager.GetObject("AuthTokenAddHost", resourceCulture)); }
        }
        internal static string AuthTokenAddHostGhostText {
            get { return (string)(ResourceManager.GetObject("AuthTokenAddHostGhostText", resourceCulture)); }
        }
        internal static string AuthTokenAddToken {
            get { return (string)(ResourceManager.GetObject("AuthTokenAddToken", resourceCulture)); }
        }
        internal static string AuthTokenAddTokenGhostText {
            get { return (string)(ResourceManager.GetObject("AuthTokenAddTokenGhostText", resourceCulture)); }
        }
        internal static string CompatibleVersionsTitle {
            get { return (string)(ResourceManager.GetObject("CompatibleVersionsTitle", resourceCulture)); }
        }
        internal static string CompatibleVersionsListHeader {
            get { return (string)(ResourceManager.GetObject("CompatibleVersionsListHeader", resourceCulture)); }
        }
        internal static string CompatibleVersionsListAcceptTip {
            get { return (string)(ResourceManager.GetObject("CompatibleVersionsListAcceptTip", resourceCulture)); }
        }
        internal static string CompatibleVersionsGhostText {
            get { return (string)(ResourceManager.GetObject("CompatibleVersionsGhostText", resourceCulture)); }
        }
        internal static string CompatibleVersionsEntryAcceptTip {
            get { return (string)(ResourceManager.GetObject("CompatibleVersionsEntryAcceptTip", resourceCulture)); }
        }
        internal static string ThemeNotFound {
            get { return (string)(ResourceManager.GetObject("ThemeNotFound", resourceCulture)); }
        }
        internal static string ThemeList {
            get { return (string)(ResourceManager.GetObject("ThemeList", resourceCulture)); }
        }
        internal static string RecommendationsLabel {
            get { return (string)(ResourceManager.GetObject("RecommendationsLabel", resourceCulture)); }
        }
        internal static string RecommendationsInstallHeader {
            get { return (string)(ResourceManager.GetObject("RecommendationsInstallHeader", resourceCulture)); }
        }
        internal static string RecommendationsNameHeader {
            get { return (string)(ResourceManager.GetObject("RecommendationsNameHeader", resourceCulture)); }
        }
        internal static string RecommendationsSourcesHeader {
            get { return (string)(ResourceManager.GetObject("RecommendationsSourcesHeader", resourceCulture)); }
        }
        internal static string RecommendationsTitle {
            get { return (string)(ResourceManager.GetObject("RecommendationsTitle", resourceCulture)); }
        }
        internal static string ImportSelectTitle {
            get { return (string)(ResourceManager.GetObject("ImportSelectTitle", resourceCulture)); }
        }
        internal static string ImportSelectHeader {
            get { return (string)(ResourceManager.GetObject("ImportSelectHeader", resourceCulture)); }
        }
        internal static string ImportProgressTitle {
            get { return (string)(ResourceManager.GetObject("ImportProgressTitle", resourceCulture)); }
        }
        internal static string ImportProgressMessage {
            get { return (string)(ResourceManager.GetObject("ImportProgressMessage", resourceCulture)); }
        }
        internal static string InstanceNameLabel {
            get { return (string)(ResourceManager.GetObject("InstanceNameLabel", resourceCulture)); }
        }
        internal static string InstanceNameGhostText {
            get { return (string)(ResourceManager.GetObject("InstanceNameGhostText", resourceCulture)); }
        }
        internal static string InstancePathGhostText {
            get { return (string)(ResourceManager.GetObject("InstancePathGhostText", resourceCulture)); }
        }
        internal static string InstancePathLabel {
            get { return (string)(ResourceManager.GetObject("InstancePathLabel", resourceCulture)); }
        }
        internal static string InstanceNameEmptyError {
            get { return (string)(ResourceManager.GetObject("InstanceNameEmptyError", resourceCulture)); }
        }
        internal static string InstanceNameDuplicateError {
            get { return (string)(ResourceManager.GetObject("InstanceNameDuplicateError", resourceCulture)); }
        }
        internal static string InstancePathNotGameFolderError {
            get { return (string)(ResourceManager.GetObject("InstancePathNotGameFolderError", resourceCulture)); }
        }
        internal static string InstanceAddExample {
            get { return (string)(ResourceManager.GetObject("InstanceAddExample", resourceCulture)); }
        }
        internal static string InstanceAddTitle {
            get { return (string)(ResourceManager.GetObject("InstanceAddTitle", resourceCulture)); }
        }
        internal static string InstanceEditTitle {
            get { return (string)(ResourceManager.GetObject("InstanceEditTitle", resourceCulture)); }
        }
        internal static string InstanceEditRepoFrameTitle {
            get { return (string)(ResourceManager.GetObject("InstanceEditRepoFrameTitle", resourceCulture)); }
        }
        internal static string InstanceEditCompatFrameTitle {
            get { return (string)(ResourceManager.GetObject("InstanceEditCompatFrameTitle", resourceCulture)); }
        }
        internal static string InstanceEditRepoIndexHeader {
            get { return (string)(ResourceManager.GetObject("InstanceEditRepoIndexHeader", resourceCulture)); }
        }
        internal static string InstanceEditRepoNameHeader {
            get { return (string)(ResourceManager.GetObject("InstanceEditRepoNameHeader", resourceCulture)); }
        }
        internal static string InstanceEditRepoURLHeader {
            get { return (string)(ResourceManager.GetObject("InstanceEditRepoURLHeader", resourceCulture)); }
        }
        internal static string InstanceEditCompatVersionHeader {
            get { return (string)(ResourceManager.GetObject("InstanceEditCompatVersionHeader", resourceCulture)); }
        }
        internal static string InstanceEditRegistryParseError {
            get { return (string)(ResourceManager.GetObject("InstanceEditRegistryParseError", resourceCulture)); }
        }
        internal static string InstanceListTitle {
            get { return (string)(ResourceManager.GetObject("InstanceListTitle", resourceCulture)); }
        }
        internal static string InstanceListLabel {
            get { return (string)(ResourceManager.GetObject("InstanceListLabel", resourceCulture)); }
        }
        internal static string InstanceListDefaultHeader {
            get { return (string)(ResourceManager.GetObject("InstanceListDefaultHeader", resourceCulture)); }
        }
        internal static string InstanceListNameHeader {
            get { return (string)(ResourceManager.GetObject("InstanceListNameHeader", resourceCulture)); }
        }
        internal static string InstanceListGameHeader {
            get { return (string)(ResourceManager.GetObject("InstanceListGameHeader", resourceCulture)); }
        }
        internal static string InstanceListVersionHeader {
            get { return (string)(ResourceManager.GetObject("InstanceListVersionHeader", resourceCulture)); }
        }
        internal static string InstancePlayTimeHeader {
            get { return (string)(ResourceManager.GetObject("InstancePlayTimeHeader", resourceCulture)); }
        }
        internal static string InstanceListPathHeader {
            get { return (string)(ResourceManager.GetObject("InstanceListPathHeader", resourceCulture)); }
        }
        internal static string InstanceListLoadingInstance {
            get { return (string)(ResourceManager.GetObject("InstanceListLoadingInstance", resourceCulture)); }
        }
        internal static string InstanceListDefaultToggle {
            get { return (string)(ResourceManager.GetObject("InstanceListDefaultToggle", resourceCulture)); }
        }
        internal static string InstanceListLoadingError {
            get { return (string)(ResourceManager.GetObject("InstanceListLoadingError", resourceCulture)); }
        }
        internal static string InstanceListLocked {
            get { return (string)(ResourceManager.GetObject("InstanceListLocked", resourceCulture)); }
        }
        internal static string InstanceListNoVersion {
            get { return (string)(ResourceManager.GetObject("InstanceListNoVersion", resourceCulture)); }
        }
        internal static string InstallTitle {
            get { return (string)(ResourceManager.GetObject("InstallTitle", resourceCulture)); }
        }
        internal static string InstallMessage {
            get { return (string)(ResourceManager.GetObject("InstallMessage", resourceCulture)); }
        }
        internal static string InstallOwnedFileConflict {
            get { return (string)(ResourceManager.GetObject("InstallOwnedFileConflict", resourceCulture)); }
        }
        internal static string InstallUnownedFileConflict {
            get { return (string)(ResourceManager.GetObject("InstallUnownedFileConflict", resourceCulture)); }
        }
        internal static string InstallFilesReverted {
            get { return (string)(ResourceManager.GetObject("InstallFilesReverted", resourceCulture)); }
        }
        internal static string InstallAuthTokenPrompt {
            get { return (string)(ResourceManager.GetObject("InstallAuthTokenPrompt", resourceCulture)); }
        }
        internal static string InstallTooManyModsNameHeader {
            get { return (string)(ResourceManager.GetObject("InstallTooManyModsNameHeader", resourceCulture)); }
        }
        internal static string InstallBadMetadata {
            get { return (string)(ResourceManager.GetObject("InstallBadMetadata", resourceCulture)); }
        }
        internal static string InstallUnsatisfiedDependency {
            get { return (string)(ResourceManager.GetObject("InstallUnsatisfiedDependency", resourceCulture)); }
        }
        internal static string InstallModuleNotFound {
            get { return (string)(ResourceManager.GetObject("InstallModuleNotFound", resourceCulture)); }
        }
        internal static string InstallNotInstalled {
            get { return (string)(ResourceManager.GetObject("InstallNotInstalled", resourceCulture)); }
        }
        internal static string InstallModInstalled {
            get { return (string)(ResourceManager.GetObject("InstallModInstalled", resourceCulture)); }
        }
        internal static string ModInfoTitle {
            get { return (string)(ResourceManager.GetObject("ModInfoTitle", resourceCulture)); }
        }
        internal static string ModInfoMenuTip {
            get { return (string)(ResourceManager.GetObject("ModInfoMenuTip", resourceCulture)); }
        }
        internal static string ModInfoAuthors {
            get { return (string)(ResourceManager.GetObject("ModInfoAuthors", resourceCulture)); }
        }
        internal static string ModInfoLicence {
            get { return (string)(ResourceManager.GetObject("ModInfoLicence", resourceCulture)); }
        }
        internal static string ModInfoDownload {
            get { return (string)(ResourceManager.GetObject("ModInfoDownload", resourceCulture)); }
        }
        internal static string ModInfoDescriptionFrame {
            get { return (string)(ResourceManager.GetObject("ModInfoDescriptionFrame", resourceCulture)); }
        }
        internal static string ModInfoUnavailableWarning {
            get { return (string)(ResourceManager.GetObject("ModInfoUnavailableWarning", resourceCulture)); }
        }
        internal static string ModInfoDownloadToCache {
            get { return (string)(ResourceManager.GetObject("ModInfoDownloadToCache", resourceCulture)); }
        }
        internal static string ModInfoHomePage {
            get { return (string)(ResourceManager.GetObject("ModInfoHomePage", resourceCulture)); }
        }
        internal static string ModInfoHomePageTip {
            get { return (string)(ResourceManager.GetObject("ModInfoHomePageTip", resourceCulture)); }
        }
        internal static string ModInfoRepository {
            get { return (string)(ResourceManager.GetObject("ModInfoRepository", resourceCulture)); }
        }
        internal static string ModInfoRepositoryTip {
            get { return (string)(ResourceManager.GetObject("ModInfoRepositoryTip", resourceCulture)); }
        }
        internal static string ModInfoBugtracker {
            get { return (string)(ResourceManager.GetObject("ModInfoBugtracker", resourceCulture)); }
        }
        internal static string ModInfoBugtrackerTip {
            get { return (string)(ResourceManager.GetObject("ModInfoBugtrackerTip", resourceCulture)); }
        }
        internal static string ModInfoSpaceDock {
            get { return (string)(ResourceManager.GetObject("ModInfoSpaceDock", resourceCulture)); }
        }
        internal static string ModInfoSpaceDockTip {
            get { return (string)(ResourceManager.GetObject("ModInfoSpaceDockTip", resourceCulture)); }
        }
        internal static string ModInfoCurse {
            get { return (string)(ResourceManager.GetObject("ModInfoCurse", resourceCulture)); }
        }
        internal static string ModInfoCurseTip {
            get { return (string)(ResourceManager.GetObject("ModInfoCurseTip", resourceCulture)); }
        }
        internal static string ModInfoStore {
            get { return (string)(ResourceManager.GetObject("ModInfoStore", resourceCulture)); }
        }
        internal static string ModInfoStoreTip {
            get { return (string)(ResourceManager.GetObject("ModInfoStoreTip", resourceCulture)); }
        }
        internal static string ModInfoSteamStore {
            get { return (string)(ResourceManager.GetObject("ModInfoSteamStore", resourceCulture)); }
        }
        internal static string ModInfoSteamStoreTip {
            get { return (string)(ResourceManager.GetObject("ModInfoSteamStoreTip", resourceCulture)); }
        }
        internal static string ModInfoViewMetadata {
            get { return (string)(ResourceManager.GetObject("ModInfoViewMetadata", resourceCulture)); }
        }
        internal static string ModInfoViewMetadataTip {
            get { return (string)(ResourceManager.GetObject("ModInfoViewMetadataTip", resourceCulture)); }
        }
        internal static string ModInfoViewMetadataTitle {
            get { return (string)(ResourceManager.GetObject("ModInfoViewMetadataTitle", resourceCulture)); }
        }
        internal static string ModInfoURLLaunching {
            get { return (string)(ResourceManager.GetObject("ModInfoURLLaunching", resourceCulture)); }
        }
        internal static string ModInfoDependenciesFrame {
            get { return (string)(ResourceManager.GetObject("ModInfoDependenciesFrame", resourceCulture)); }
        }
        internal static string ModInfoRequiredLabel {
            get { return (string)(ResourceManager.GetObject("ModInfoRequiredLabel", resourceCulture)); }
        }
        internal static string ModInfoConflictsLabel {
            get { return (string)(ResourceManager.GetObject("ModInfoConflictsLabel", resourceCulture)); }
        }
        internal static string ModInfoReplacedBy {
            get { return (string)(ResourceManager.GetObject("ModInfoReplacedBy", resourceCulture)); }
        }
        internal static string ModInfoInstalledOn {
            get { return (string)(ResourceManager.GetObject("ModInfoInstalledOn", resourceCulture)); }
        }
        internal static string ModInfoInstalledManually {
            get { return (string)(ResourceManager.GetObject("ModInfoInstalledManually", resourceCulture)); }
        }
        internal static string ModInfoLatestInstalledOn {
            get { return (string)(ResourceManager.GetObject("ModInfoLatestInstalledOn", resourceCulture)); }
        }
        internal static string ModInfoLatestInstalledManually {
            get { return (string)(ResourceManager.GetObject("ModInfoLatestInstalledManually", resourceCulture)); }
        }
        internal static string ModInfoLatestVersion {
            get { return (string)(ResourceManager.GetObject("ModInfoLatestVersion", resourceCulture)); }
        }
        internal static string ModInfoOtherVersions {
            get { return (string)(ResourceManager.GetObject("ModInfoOtherVersions", resourceCulture)); }
        }
        internal static string ModInfoUnavailableInstalledOn {
            get { return (string)(ResourceManager.GetObject("ModInfoUnavailableInstalledOn", resourceCulture)); }
        }
        internal static string ModInfoUnavailableInstalledManually {
            get { return (string)(ResourceManager.GetObject("ModInfoUnavailableInstalledManually", resourceCulture)); }
        }
        internal static string ModInfoCompatibleWith {
            get { return (string)(ResourceManager.GetObject("ModInfoCompatibleWith", resourceCulture)); }
        }
        internal static string ModInfoHostedOn {
            get { return (string)(ResourceManager.GetObject("ModInfoHostedOn", resourceCulture)); }
        }
        internal static string ModInfoReportBugsOn {
            get { return (string)(ResourceManager.GetObject("ModInfoReportBugsOn", resourceCulture)); }
        }
        internal static string ModInfoRepositoryOn {
            get { return (string)(ResourceManager.GetObject("ModInfoRepositoryOn", resourceCulture)); }
        }
        internal static string ModInfoHomePageOn {
            get { return (string)(ResourceManager.GetObject("ModInfoHomePageOn", resourceCulture)); }
        }
        internal static string ModInfoBuyFromKSPStore {
            get { return (string)(ResourceManager.GetObject("ModInfoBuyFromKSPStore", resourceCulture)); }
        }
        internal static string ModInfoBuyFromSteamStore {
            get { return (string)(ResourceManager.GetObject("ModInfoBuyFromSteamStore", resourceCulture)); }
        }
        internal static string ModInfoBuyFromKSPStoreOrSteamStore {
            get { return (string)(ResourceManager.GetObject("ModInfoBuyFromKSPStoreOrSteamStore", resourceCulture)); }
        }
        internal static string ModInfoDownloading {
            get { return (string)(ResourceManager.GetObject("ModInfoDownloading", resourceCulture)); }
        }
        internal static string ModInfoDownloadCorrupted {
            get { return (string)(ResourceManager.GetObject("ModInfoDownloadCorrupted", resourceCulture)); }
        }
        internal static string ModInfoDownloadFailed {
            get { return (string)(ResourceManager.GetObject("ModInfoDownloadFailed", resourceCulture)); }
        }
        internal static string ProgressTitle {
            get { return (string)(ResourceManager.GetObject("ProgressTitle", resourceCulture)); }
        }
        internal static string ProgressMessages {
            get { return (string)(ResourceManager.GetObject("ProgressMessages", resourceCulture)); }
        }
        internal static string SplashLoading {
            get { return (string)(ResourceManager.GetObject("SplashLoading", resourceCulture)); }
        }
        internal static string SplashPressAnyKey {
            get { return (string)(ResourceManager.GetObject("SplashPressAnyKey", resourceCulture)); }
        }
        internal static string RepoNameLabel {
            get { return (string)(ResourceManager.GetObject("RepoNameLabel", resourceCulture)); }
        }
        internal static string RepoNameGhostText {
            get { return (string)(ResourceManager.GetObject("RepoNameGhostText", resourceCulture)); }
        }
        internal static string RepoURLLabel {
            get { return (string)(ResourceManager.GetObject("RepoURLLabel", resourceCulture)); }
        }
        internal static string RepoURLGhostText {
            get { return (string)(ResourceManager.GetObject("RepoURLGhostText", resourceCulture)); }
        }
        internal static string RepoImportTip {
            get { return (string)(ResourceManager.GetObject("RepoImportTip", resourceCulture)); }
        }
        internal static string RepoTitle {
            get { return (string)(ResourceManager.GetObject("RepoTitle", resourceCulture)); }
        }
        internal static string RepoNameEmptyError {
            get { return (string)(ResourceManager.GetObject("RepoNameEmptyError", resourceCulture)); }
        }
        internal static string RepoNameDuplicateError {
            get { return (string)(ResourceManager.GetObject("RepoNameDuplicateError", resourceCulture)); }
        }
        internal static string RepoURLEmptyError {
            get { return (string)(ResourceManager.GetObject("RepoURLEmptyError", resourceCulture)); }
        }
        internal static string ModListNameHeader {
            get { return (string)(ResourceManager.GetObject("ModListNameHeader", resourceCulture)); }
        }
        internal static string ModListVersionHeader {
            get { return (string)(ResourceManager.GetObject("ModListVersionHeader", resourceCulture)); }
        }
        internal static string ModListMaxGameVersionHeader {
            get { return (string)(ResourceManager.GetObject("ModListMaxGameVersionHeader", resourceCulture)); }
        }
        internal static string ModListSearchFocusedGhostText {
            get { return (string)(ResourceManager.GetObject("ModListSearchFocusedGhostText", resourceCulture)); }
        }
        internal static string ModListSearchUnfocusedGhostText {
            get { return (string)(ResourceManager.GetObject("ModListSearchUnfocusedGhostText", resourceCulture)); }
        }
        internal static string ModListCount {
            get { return (string)(ResourceManager.GetObject("ModListCount", resourceCulture)); }
        }
        internal static string ModListSizeOnDisk {
            get { return (string)(ResourceManager.GetObject("ModListSizeOnDisk", resourceCulture)); }
        }
        internal static string ModListInstallTip {
            get { return (string)(ResourceManager.GetObject("ModListInstallTip", resourceCulture)); }
        }
        internal static string ModListUpgradeTip {
            get { return (string)(ResourceManager.GetObject("ModListUpgradeTip", resourceCulture)); }
        }
        internal static string ModListReplaceTip {
            get { return (string)(ResourceManager.GetObject("ModListReplaceTip", resourceCulture)); }
        }
        internal static string ModListRemoveTip {
            get { return (string)(ResourceManager.GetObject("ModListRemoveTip", resourceCulture)); }
        }
        internal static string ModListAutoInstTip {
            get { return (string)(ResourceManager.GetObject("ModListAutoInstTip", resourceCulture)); }
        }
        internal static string ModListUserSelectedTip {
            get { return (string)(ResourceManager.GetObject("ModListUserSelectedTip", resourceCulture)); }
        }
        internal static string ModListApplyChangesTip {
            get { return (string)(ResourceManager.GetObject("ModListApplyChangesTip", resourceCulture)); }
        }
        internal static string ModListUpdatedDayAgo {
            get { return (string)(ResourceManager.GetObject("ModListUpdatedDayAgo", resourceCulture)); }
        }
        internal static string ModListUpdatedDaysAgo {
            get { return (string)(ResourceManager.GetObject("ModListUpdatedDaysAgo", resourceCulture)); }
        }
        internal static string ModListSortMenu {
            get { return (string)(ResourceManager.GetObject("ModListSortMenu", resourceCulture)); }
        }
        internal static string ModListSortMenuTip {
            get { return (string)(ResourceManager.GetObject("ModListSortMenuTip", resourceCulture)); }
        }
        internal static string ModListRefreshMenu {
            get { return (string)(ResourceManager.GetObject("ModListRefreshMenu", resourceCulture)); }
        }
        internal static string ModListRefreshMenuTip {
            get { return (string)(ResourceManager.GetObject("ModListRefreshMenuTip", resourceCulture)); }
        }
        internal static string ModListUpgradeMenu {
            get { return (string)(ResourceManager.GetObject("ModListUpgradeMenu", resourceCulture)); }
        }
        internal static string ModListUpgradeMenuTip {
            get { return (string)(ResourceManager.GetObject("ModListUpgradeMenuTip", resourceCulture)); }
        }
        internal static string ModListAuditRecsMenu {
            get { return (string)(ResourceManager.GetObject("ModListAuditRecsMenu", resourceCulture)); }
        }
        internal static string ModListAuditRecsMenuTip {
            get { return (string)(ResourceManager.GetObject("ModListAuditRecsMenuTip", resourceCulture)); }
        }
        internal static string ModListImportMenu {
            get { return (string)(ResourceManager.GetObject("ModListImportMenu", resourceCulture)); }
        }
        internal static string ModListImportMenuTip {
            get { return (string)(ResourceManager.GetObject("ModListImportMenuTip", resourceCulture)); }
        }
        internal static string ModListExportMenu {
            get { return (string)(ResourceManager.GetObject("ModListExportMenu", resourceCulture)); }
        }
        internal static string ModListExportMenuTip {
            get { return (string)(ResourceManager.GetObject("ModListExportMenuTip", resourceCulture)); }
        }
        internal static string ModListInstanceSettingsMenu {
            get { return (string)(ResourceManager.GetObject("ModListInstanceSettingsMenu", resourceCulture)); }
        }
        internal static string ModListInstanceSettingsMenuTip {
            get { return (string)(ResourceManager.GetObject("ModListInstanceSettingsMenuTip", resourceCulture)); }
        }
        internal static string ModListSelectInstanceMenu {
            get { return (string)(ResourceManager.GetObject("ModListSelectInstanceMenu", resourceCulture)); }
        }
        internal static string ModListSelectInstanceMenuTip {
            get { return (string)(ResourceManager.GetObject("ModListSelectInstanceMenuTip", resourceCulture)); }
        }
        internal static string ModListAuthTokenMenu {
            get { return (string)(ResourceManager.GetObject("ModListAuthTokenMenu", resourceCulture)); }
        }
        internal static string ModListAuthTokenMenuTip {
            get { return (string)(ResourceManager.GetObject("ModListAuthTokenMenuTip", resourceCulture)); }
        }
        internal static string ModListHelpMenu {
            get { return (string)(ResourceManager.GetObject("ModListHelpMenu", resourceCulture)); }
        }
        internal static string ModListFilterMenu {
            get { return (string)(ResourceManager.GetObject("ModListFilterMenu", resourceCulture)); }
        }
        internal static string ModListFilterMenuTip {
            get { return (string)(ResourceManager.GetObject("ModListFilterMenuTip", resourceCulture)); }
        }
        internal static string ModListHelpMenuTip {
            get { return (string)(ResourceManager.GetObject("ModListHelpMenuTip", resourceCulture)); }
        }
        internal static string ModListQuitMenu {
            get { return (string)(ResourceManager.GetObject("ModListQuitMenu", resourceCulture)); }
        }
        internal static string ModListQuitMenuTip {
            get { return (string)(ResourceManager.GetObject("ModListQuitMenuTip", resourceCulture)); }
        }
        internal static string ModListCaptureKeyMenu {
            get { return (string)(ResourceManager.GetObject("ModListCaptureKeyMenu", resourceCulture)); }
        }
        internal static string ModListCaptureKeyMenuTip {
            get { return (string)(ResourceManager.GetObject("ModListCaptureKeyMenuTip", resourceCulture)); }
        }
        internal static string ModListPressAKey {
            get { return (string)(ResourceManager.GetObject("ModListPressAKey", resourceCulture)); }
        }
        internal static string ModListAuditNotFound {
            get { return (string)(ResourceManager.GetObject("ModListAuditNotFound", resourceCulture)); }
        }
        internal static string ModListUpdateRegistryTitle {
            get { return (string)(ResourceManager.GetObject("ModListUpdateRegistryTitle", resourceCulture)); }
        }
        internal static string ModListUpdateRegistryMessage {
            get { return (string)(ResourceManager.GetObject("ModListUpdateRegistryMessage", resourceCulture)); }
        }
        internal static string ModListNewMod {
            get { return (string)(ResourceManager.GetObject("ModListNewMod", resourceCulture)); }
        }
        internal static string ModListNewMods {
            get { return (string)(ResourceManager.GetObject("ModListNewMods", resourceCulture)); }
        }
        internal static string ModListScanBad {
            get { return (string)(ResourceManager.GetObject("ModListScanBad", resourceCulture)); }
        }
        internal static string ModListExportPrefix {
            get { return (string)(ResourceManager.GetObject("ModListExportPrefix", resourceCulture)); }
        }
        internal static string ModListExported {
            get { return (string)(ResourceManager.GetObject("ModListExported", resourceCulture)); }
        }
        internal static string ModListExportFailed {
            get { return (string)(ResourceManager.GetObject("ModListExportFailed", resourceCulture)); }
        }
        internal static string ModListHelpSymbolHeader {
            get { return (string)(ResourceManager.GetObject("ModListHelpSymbolHeader", resourceCulture)); }
        }
        internal static string ModListHelpInstalled {
            get { return (string)(ResourceManager.GetObject("ModListHelpInstalled", resourceCulture)); }
        }
        internal static string ModListHelpAutoInstalled {
            get { return (string)(ResourceManager.GetObject("ModListHelpAutoInstalled", resourceCulture)); }
        }
        internal static string ModListHelpUpgradeable {
            get { return (string)(ResourceManager.GetObject("ModListHelpUpgradeable", resourceCulture)); }
        }
        internal static string ModListHelpManuallyInstalled {
            get { return (string)(ResourceManager.GetObject("ModListHelpManuallyInstalled", resourceCulture)); }
        }
        internal static string ModListHelpReplaceable {
            get { return (string)(ResourceManager.GetObject("ModListHelpReplaceable", resourceCulture)); }
        }
        internal static string ModListHelpUnavailable {
            get { return (string)(ResourceManager.GetObject("ModListHelpUnavailable", resourceCulture)); }
        }
        internal static string ModListHelpBasicKeysHeader {
            get { return (string)(ResourceManager.GetObject("ModListHelpBasicKeysHeader", resourceCulture)); }
        }
        internal static string ModListHelpMoveFocus {
            get { return (string)(ResourceManager.GetObject("ModListHelpMoveFocus", resourceCulture)); }
        }
        internal static string ModListHelpSelectRow {
            get { return (string)(ResourceManager.GetObject("ModListHelpSelectRow", resourceCulture)); }
        }
        internal static string ModListHelpClearSearch {
            get { return (string)(ResourceManager.GetObject("ModListHelpClearSearch", resourceCulture)); }
        }
        internal static string ModListHelpSpecialSearchesHeader {
            get { return (string)(ResourceManager.GetObject("ModListHelpSpecialSearchesHeader", resourceCulture)); }
        }
        internal static string ModListHelpAuthor {
            get { return (string)(ResourceManager.GetObject("ModListHelpAuthor", resourceCulture)); }
        }
        internal static string ModListHelpName {
            get { return (string)(ResourceManager.GetObject("ModListHelpName", resourceCulture)); }
        }
        internal static string ModListHelpSearchAuthor {
            get { return (string)(ResourceManager.GetObject("ModListHelpSearchAuthor", resourceCulture)); }
        }
        internal static string ModListHelpSearchInstalled {
            get { return (string)(ResourceManager.GetObject("ModListHelpSearchInstalled", resourceCulture)); }
        }
        internal static string ModListHelpSearchUpgradeable {
            get { return (string)(ResourceManager.GetObject("ModListHelpSearchUpgradeable", resourceCulture)); }
        }
        internal static string ModListHelpSearchDepends {
            get { return (string)(ResourceManager.GetObject("ModListHelpSearchDepends", resourceCulture)); }
        }
        internal static string ModListHelpSearchConflicts {
            get { return (string)(ResourceManager.GetObject("ModListHelpSearchConflicts", resourceCulture)); }
        }
        internal static string ModListHelpSearchNew {
            get { return (string)(ResourceManager.GetObject("ModListHelpSearchNew", resourceCulture)); }
        }

        internal static string FiltersAddMiniAVCMenu {
            get { return (string)(ResourceManager.GetObject("FiltersAddMiniAVCMenu", resourceCulture)); }
        }
        internal static string FiltersAddMiniAVCMenuTip {
            get { return (string)(ResourceManager.GetObject("FiltersAddMiniAVCMenuTip", resourceCulture)); }
        }
        internal static string FiltersGlobalHeader {
            get { return (string)(ResourceManager.GetObject("FiltersGlobalHeader", resourceCulture)); }
        }
        internal static string FiltersInstanceHeader {
            get { return (string)(ResourceManager.GetObject("FiltersInstanceHeader", resourceCulture)); }
        }
        internal static string FiltersTitle {
            get { return (string)(ResourceManager.GetObject("FiltersTitle", resourceCulture)); }
        }

        internal static string FilterAddGhostText {
            get { return (string)(ResourceManager.GetObject("FilterAddGhostText", resourceCulture)); }
        }
        internal static string FilterAddAcceptTip {
            get { return (string)(ResourceManager.GetObject("FilterAddAcceptTip", resourceCulture)); }
        }
        internal static string FilterAddTitle {
            get { return (string)(ResourceManager.GetObject("FilterAddTitle", resourceCulture)); }
        }

        internal static string ExitTitle {
            get { return (string)(ResourceManager.GetObject("ExitTitle", resourceCulture)); }
        }
        internal static string ExitBody {
            get { return (string)(ResourceManager.GetObject("ExitBody", resourceCulture)); }
        }

    }
}
