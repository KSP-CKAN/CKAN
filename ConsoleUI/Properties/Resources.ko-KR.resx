<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accept" xml:space="preserve">
    <value>확인</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>취소하기</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>예</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>아니요</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>확인</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>뒤로가기</value>
  </data>
  <data name="Quit" xml:space="preserve">
    <value>나가기</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>추가</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>선택</value>
  </data>
  <data name="Up" xml:space="preserve">
    <value>위로</value>
  </data>
  <data name="Down" xml:space="preserve">
    <value>아래로</value>
  </data>
  <data name="FileSelectNameHeader" xml:space="preserve">
    <value>이름</value>
  </data>
  <data name="FileSelectSelect" xml:space="preserve">
    <value>선택</value>
  </data>
  <data name="AuthTokenListTitle" xml:space="preserve">
    <value>인증 토큰</value>
  </data>
  <data name="AuthTokenListHostHeader" xml:space="preserve">
    <value>호스트</value>
  </data>
  <data name="AuthTokenListTokenHeader" xml:space="preserve">
    <value>토큰</value>
  </data>
  <data name="AuthTokenAddHost" xml:space="preserve">
    <value>호스트:</value>
  </data>
  <data name="AuthTokenAddToken" xml:space="preserve">
    <value>토큰:</value>
  </data>
  <data name="RecommendationsInstallHeader" xml:space="preserve">
    <value>설치</value>
  </data>
  <data name="RecommendationsNameHeader" xml:space="preserve">
    <value>이름</value>
  </data>
  <data name="InstanceNameLabel" xml:space="preserve">
    <value>이름:</value>
  </data>
  <data name="InstanceEditRepoNameHeader" xml:space="preserve">
    <value>이름</value>
  </data>
  <data name="InstanceEditRepoURLHeader" xml:space="preserve">
    <value>URL</value>
  </data>
  <data name="InstanceEditCompatVersionHeader" xml:space="preserve">
    <value>버전</value>
  </data>
  <data name="InstanceListDefaultHeader" xml:space="preserve">
    <value>기본</value>
  </data>
  <data name="InstanceListNameHeader" xml:space="preserve">
    <value>이름</value>
  </data>
  <data name="InstanceListGameHeader" xml:space="preserve">
    <value>게임</value>
  </data>
  <data name="InstanceListVersionHeader" xml:space="preserve">
    <value>버전</value>
  </data>
  <data name="InstanceListPathHeader" xml:space="preserve">
    <value>경로</value>
  </data>
  <data name="InstanceListDefaultToggle" xml:space="preserve">
    <value>기본</value>
  </data>
  <data name="InstanceListNoVersion" xml:space="preserve">
    <value>&lt;NONE&gt;</value>
  </data>
  <data name="InstallTooManyModsNameHeader" xml:space="preserve">
    <value>이름</value>
  </data>
  <data name="DeleteDirectoriesHeader" xml:space="preserve">
    <value>디렉토리 삭제</value>
  </data>
  <data name="DeleteDirectoriesHelpLabel" xml:space="preserve">
    <value>다음 디렉토리들은 모드들을 제거하고 남은 것들이에요. 이 디렉토리들은 CKAN이 설치하지 않은 파일들(모드가 직접 만들었거나 수동으로 설치됐을 수 있음)이 있어요. CKAN은 자신이 설치하지 않은 파일을 자동으로 지우지 않지만, 당신은 지울지 말지 선택할 수 있어요(지워도 안전할 경우에는 지우는 것을 추천해요). 참고로 디렉토리가 아직 남아있다면, 모듈매니저(ModuleManager)가 모드가 설치되어 있는 것으로 잘못 인식할 수도 있어요.</value>
  </data>
  <data name="DeleteDirectoriesFoldersHeader" xml:space="preserve">
    <value>디렉토리</value>
  </data>
  <data name="DeleteDirectoriesFilesHeader" xml:space="preserve">
    <value>디렉토리 내용</value>
  </data>
  <data name="ModInfoLicence" xml:space="preserve">
    <value>라이선스:</value>
  </data>
  <data name="ModInfoDescriptionFrame" xml:space="preserve">
    <value>설명</value>
  </data>
  <data name="ModInfoDownloadToCache" xml:space="preserve">
    <value>캐시로 다운로드 (설치X)</value>
  </data>
  <data name="RepoNameLabel" xml:space="preserve">
    <value>이름:</value>
  </data>
  <data name="RepoURLLabel" xml:space="preserve">
    <value>URL:</value>
  </data>
  <data name="ModListNameHeader" xml:space="preserve">
    <value>이름</value>
  </data>
  <data name="ModListVersionHeader" xml:space="preserve">
    <value>버전</value>
  </data>
  <data name="ModListMaxGameVersionHeader" xml:space="preserve">
    <value>최대 호환 버전</value>
  </data>
  <data name="ModListDownloadsHeader" xml:space="preserve">
    <value>다운로드 수</value>
  </data>
  <data name="ModListInstallTip" xml:space="preserve">
    <value>설치</value>
  </data>
  <data name="ModListReplaceTip" xml:space="preserve">
    <value>대체</value>
  </data>
  <data name="ModListApplyChangesTip" xml:space="preserve">
    <value>변경 적용하기</value>
  </data>
  <data name="ModListAuditRecsMenu" xml:space="preserve">
    <value>추천 모드 심사</value>
  </data>
  <data name="CkanFileSelectHeader" xml:space="preserve">
    <value>설치</value>
  </data>
  <data name="ModListHelpMenu" xml:space="preserve">
    <value>도움말</value>
  </data>
  <data name="ModListQuitMenu" xml:space="preserve">
    <value>나가기</value>
  </data>
  <data name="ModListHelpInstalled" xml:space="preserve">
    <value>설치됨</value>
  </data>
  <data name="ModListHelpAutoInstalled" xml:space="preserve">
    <value>자동설치</value>
  </data>
  <data name="ModListHelpReplaceable" xml:space="preserve">
    <value>대체 가능</value>
  </data>
  <data name="FiltersAddMiniAVCMenu" xml:space="preserve">
    <value>MiniAVC 추가</value>
  </data>
  <data name="FiltersInstanceHeader" xml:space="preserve">
    <value>인스턴스 한정 필터</value>
  </data>
</root>
