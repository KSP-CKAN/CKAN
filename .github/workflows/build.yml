name: Build CKAN + NetKAN

on:
  workflow_call:
    inputs:
      configuration:
        type: string
        default: Debug
    outputs:
      unsigned-artifact-id:
        description: Artifact ID of the assets to be signed
        value: ${{ jobs.build.outputs.unsigned-artifact-id }}

jobs:
  build:
    runs-on: ubuntu-22.04
    outputs:
      unsigned-artifact-id: ${{ steps.upload-unsigned-artifact.outputs.artifact-id }}
    steps:
      - uses: actions/checkout@v4
      - name: Restore cache for _build/tools
        uses: actions/cache@v4
        with:
          path: _build/tools
          key: build-tools-${{ hashFiles('build.sh', 'build.ps1', 'build/*') }}
      - name: Restore cache for _build/lib/nuget
        uses: actions/cache@v4
        with:
          path: |
            _build/lib/nuget
            ~/.nuget/packages
          key: nuget-oldref-modules-${{ hashFiles('**/packages.config') }}-${{ hashFiles('**/*.csproj') }}
      - name: Build ckan.exe and netkan.exe
        run: ./build.sh --configuration=${{ inputs.configuration }}
      - name: Upload repack artifact
        id: upload-repack-artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.configuration }}-repack-unsigned
          path: _build/repack/
          retention-days: 1
      - name: Upload out artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.configuration }}-out-unsigned
          path: _build/out/
          include-hidden-files: true
          retention-days: 1
      - name: Bundle assets for signing
        if: inputs.configuration == 'Release'
        run: ./build.sh Prepare-SignPath --configuration=${{ inputs.configuration }} --exclusive
      - name: Upload unsigned artifact
        id: upload-unsigned-artifact
        if: inputs.configuration == 'Release'
        uses: actions/upload-artifact@v4
        with:
          name: unsigned
          path: _build/signpath/Release
          retention-days: 1
      - name: Upload ckan.exe artifact
        if: inputs.configuration == 'Release'
        uses: actions/upload-artifact@v4
        with:
          name: ckan.exe
          path: _build/repack/Release/ckan.exe
          retention-days: 7

  build-osx:
    needs:
      - build
    runs-on: ubuntu-22.04
    if: inputs.configuration == 'Release'
    steps:
      - uses: actions/checkout@v4
      - name: Restore cache for _build/tools
        uses: actions/cache@v4
        with:
          path: _build/tools
          key: build-tools-${{ hashFiles('build.sh', 'build.ps1', 'build/*') }}
      - name: Download out artifact
        uses: actions/download-artifact@v5
        with:
          name: ${{ inputs.configuration }}-out-unsigned
          path: _build/out/
      - name: Build CKAN.app
        run: |
          chmod a+x _build/out/Build/*/bin/net8.0/Build _build/out/Build/*/obj/*/net8.0/apphost
          sudo apt-get install -y libplist-utils rdfind symlinks genisoimage
          ./build.sh osx-app --configuration=${{ inputs.configuration }} --exclusive
      - name: Ad hoc codesign x86_64 binary
        uses: indygreg/apple-code-sign-action@v1
        with:
          input_path: _build/osx/dmg/CKAN.app/Contents/MacOS/x86_64/CKAN-CmdLine
      - name: Ad hoc codesign arm64 binary
        uses: indygreg/apple-code-sign-action@v1
        with:
          input_path: _build/osx/dmg/CKAN.app/Contents/MacOS/arm64/CKAN-CmdLine
      - name: Build CKAN.dmg
        run: |
          ./build.sh osx-dmg --configuration=${{ inputs.configuration }} --exclusive
      - name: Upload CKAN.dmg artifact
        uses: actions/upload-artifact@v4
        with:
          name: CKAN.dmg
          path: _build/osx/CKAN.dmg
          retention-days: 7
